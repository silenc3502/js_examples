[{"/home/oem/proj/js_examples/fifth/js_test/src/index.js":"1","/home/oem/proj/js_examples/fifth/js_test/src/App.js":"2","/home/oem/proj/js_examples/fifth/js_test/src/reportWebVitals.js":"3","/home/oem/proj/js_examples/fifth/js_test/src/array_test/ArrayTest.js":"4","/home/oem/proj/js_examples/fifth/js_test/src/array_method/ArrayMethod.js":"5","/home/oem/proj/js_examples/fifth/js_test/src/array_sort/ArraySort.js":"6","/home/oem/proj/js_examples/fifth/js_test/src/array_repeat/ArrayRepeat.js":"7"},{"size":739,"mtime":1607510305579,"results":"8","hashOfConfig":"9"},{"size":528,"mtime":1607398216738,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607398216738,"results":"11","hashOfConfig":"9"},{"size":1343,"mtime":1607409065660,"results":"12","hashOfConfig":"9"},{"size":1703,"mtime":1607498230178,"results":"13","hashOfConfig":"9"},{"size":2445,"mtime":1607508563054,"results":"14","hashOfConfig":"9"},{"size":1750,"mtime":1607514893375,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9gnngb",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/oem/proj/js_examples/fifth/js_test/src/index.js",[],"/home/oem/proj/js_examples/fifth/js_test/src/App.js",[],"/home/oem/proj/js_examples/fifth/js_test/src/reportWebVitals.js",[],["33","34"],"/home/oem/proj/js_examples/fifth/js_test/src/array_test/ArrayTest.js",["35"],"function ArrayTest() {\n    var arr = [\"one\", \"two\", \"three\"]\n\n    console.log(arr)\n\n    var one = arr[0]\n    var two = arr[1]\n    var three = arr[2]\n\n    console.log(\"one = \" + one + \", two = \" + two + \", three = \" + three)\n\n    arr = new Array(\"test1\", \"test2\", \"test3\")\n\n    console.log(arr)\n\n    var len = arr.length\n\n    console.log(\"Length = \" + len)\n    console.log(\"Last arr = \" + arr[len - 1])\n\n    arr = [1, 3, 4, 8, 2]\n    console.log(\"Before Sort = \" + arr)\n    var sortArr = arr.sort()\n    console.log(\"After Sort = \" + sortArr)\n\n    len = sortArr.length\n\n    var text = \"<ul>\"\n    for (var i = 0; i < len; i++) {\n        text += \"<li>\" + sortArr[i] + \"</li>\"\n    }\n    text += \"</ul>\"\n\n    console.log(text)\n\n    sortArr.push(77)\n\n    console.log(\"After push = \" + sortArr)\n\n    var newArr = []\n    newArr[\"first\"] = \"Java\"\n    newArr[\"second\"] = \"Python\"\n    newArr[\"third\"] = \"Golang\"\n\n    console.log(\"Hash Array - newArr[first] = \" + newArr[\"first\"] + \", [second] = \" + newArr[\"second\"] + \", [third] = \" + newArr[\"third\"])\n    console.log(\"Is it array ? newArr = \" + Array.isArray(newArr))\n    console.log(\"Is it Class Object ? newArr = \" + (newArr instanceof Array))\n\n    return (\n        <div className=\"SpreadTest\">\n            <p>\n                ArrayTest\n            </p>\n        </div>\n    )\n}\n\nexport default ArrayTest","/home/oem/proj/js_examples/fifth/js_test/src/array_method/ArrayMethod.js",["36"],"function ArrayMethod() {\n    console.log(\"Array Method Test\")\n    var arr = [\"one\", \"two\", \"three\"]\n\n    console.log(arr.toString())\n    console.log(arr.join(\"*\"))\n\n    console.log(\"Before Pop = \" + arr)\n    var elem = arr.pop()\n    console.log(\"After Pop = \" + arr)\n    console.log(\"Pop element = \" + elem)\n\n    console.log(\"Before Push = \" + arr)\n    var len = arr.push(\"seven\")\n    console.log(\"After Push = \" + arr)\n    console.log(\"current len = \" + len)\n\n    elem = arr.shift()\n    console.log(\"After Shift = \" + arr)\n    console.log(\"Shift Value = \" + elem)\n\n    len = arr.unshift(\"333\")\n    console.log(\"After Unshift = \" + arr)\n    console.log(\"Array Length = \" + len)\n\n    arr.splice(2, 0, \"elem1\", \"elem2\")\n    console.log(\"After splice = \" + arr)\n\n    arr.splice(2, 2, \"elem3\", \"elem4\")\n    console.log(\"After splice = \" + arr)\n\n    arr.splice(1, 2)\n    console.log(\"After splice = \" + arr)\n\n    var test = [\"four\", \"six\", \"ten\"]\n\n    arr = arr.concat(test)\n    console.log(\"After concat = \" + arr)\n\n    arr = arr.concat(\"I can add string\")\n    console.log(\"After concat = \" + arr)\n\n    var testArr1 = [1, 3]\n    var testArr2 = [3, 7]\n    arr = arr.concat(testArr1, testArr2)\n    console.log(\"After concat = \" + arr)\n\n    arr = [1, 2, 3, 4, 5, 6, 7]\n    var slicedArr = arr.slice(1)\n    console.log(\"After Slice = \" + arr)\n    console.log(\"Result of Slice = \" + slicedArr)\n\n    arr = [1, 2, 3, 4, 5, 6, 7]\n    var slicedArr = arr.slice(3)\n    console.log(\"After Slice = \" + arr)\n    console.log(\"Result of Slice = \" + slicedArr)\n\n    return (\n        <div className=\"SpreadTest\">\n            <p>\n                ArrayMethod\n            </p>\n        </div>\n    )\n}\n\nexport default ArrayMethod","/home/oem/proj/js_examples/fifth/js_test/src/array_sort/ArraySort.js",[],"/home/oem/proj/js_examples/fifth/js_test/src/array_repeat/ArrayRepeat.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":12,"column":11,"nodeType":"43","messageId":"44","endLine":12,"endColumn":47},{"ruleId":"45","severity":1,"message":"46","line":54,"column":9,"nodeType":"47","messageId":"48","endLine":54,"endColumn":18},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-redeclare","'slicedArr' is already defined.","Identifier","redeclared","no-global-assign","no-unsafe-negation"]